name: grad_comp
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.4

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  # Flutter_state_management:
  flutter_bloc: ^9.1.0
  # Code generator (mainly used with cubit & retrofit)
  freezed: ^3.0.6
  freezed_annotation: ^3.0.0
  # Dependencies injection
  get_it: ^8.0.3
  # Automatically generate code for converting to and from JSON by annotating Dart classes
  json_serializable: ^6.9.5
  json_annotation: ^4.9.0
  # Networking
  dio: ^5.8.0+1
  retrofit: ^4.4.2
  retrofit_generator: ^9.1.9
  pretty_dio_logger: ^1.4.0
  # Localization
  #intl: ^0.19.0
  easy_localization: ^3.0.7+1
  # For splash screen
  flutter_native_splash: ^2.4.6
  # An svg rendering and widget library for Flutter , which allows pointing
  flutter_svg: ^2.1.0
  # for adapting screen and font size.
  flutter_screenutil: ^5.9.3
  #A build system for Dart code generation and modular
  build_runner: ^2.4.15
  # For shimmer Loading effects
  shimmer: ^3.0.0
  # Cache manager for flutter. Saves web files on the storages of the device and saves the cache info using
  flutter_cache_manager: ^3.4.1
  cached_network_image: ^3.4.1
  # Animation
  flutter_animate: ^4.5.2
  # reading and writing simple key-value pairs
  shared_preferences: ^2.5.3
  # provides API to store data in secure storage.
  flutter_secure_storage: ^9.2.4
  #  launching a URL. Supports web, phone, SMS, and email schemes
  url_launcher: ^6.3.1
  # handle offline/online connectivity like a Boss
  flutter_offline: ^5.0.0
  #A Flutter widget for rendering static HTML and CSS as Flutter widgets
  flutter_html: ^3.0.0
  #  Include a rating bar indicator, supporting any fraction of rating.
  flutter_rating_bar: ^4.0.1
  # Provides a refresh indicator widget that is far more flexible
  flutter_refresh_indicator: ^1.0.4
  # Widget for Flutter, where you can show suggestions to users as they type
  flutter_typeahead: ^5.2.0
  # For selecting images from the Android and iOS image library, and taking new pictures with the camera.
  image_picker: ^1.1.2
  # Provides a cross-platform WebSocketChannel API, a cross-platform implementation of that API that communicates over an underlying StreamChannel
  web_socket_channel: ^3.0.3
  loading_animation_widget: ^1.3.0
  # A library useful for creating fuzzy timestamps. (e.g. "15 minutes ago")
  timeago: ^3.7.1
  #  Allows you to use a native file explorer to pick single or multiple absolute file paths, with extension filtering support.
  file_picker: ^10.2.0
  



dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/svgs/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
